{
    "/README.md": "TS_LLM Framework: AlphaZero for Language Models",
    "/README.md:1-26": "TS_LLM: AlphaZero-Inspired Framework for LLMs",
    "/README.md:26-47": "Training Value and Policy Inference in CT2",
    "/README.md:48-62": "Scripts for Generating & Processing Datasets",
    "/README.md:64-82": "Testing and Updating Language Model Policies",
    "/README.md:84-97": "Acknowledging LightZero Repo Code",
    "/requirement.txt": "Essential Packages for Machine Translation",
    "/setup.py": "AlphaZero LLM Framework Setup",
    "/train_mcts_scripts/game24/ds_config.json": "Optimized ML Training Parameters",
    "/train_mcts_scripts/game24/mcts_game24_llama_deepspeed.yaml": "DeepSpeed MCTS Game24 Training Config",
    "/train_mcts_scripts/game24/test_policy_and_value.sh": "Offline RL Model Test for Game24",
    "/train_mcts_scripts/game24/train_game24_critic.py": "Training Game24 MCTS Algorithm",
    "/train_mcts_scripts/game24/train_game24_critic.py:1-22": "Train Game24 with Flash Attention",
    "/train_mcts_scripts/game24/train_game24_critic.py:23-48": "Training MCTS for Game24",
    "/train_mcts_scripts/game24/train_game24_sft.py": "Training Game24 RL Model with Llama-2-7b",
    "/train_mcts_scripts/game24/train_game24_sft.py:1-30": "Train Game24 RL Model with Flash Attention",
    "/train_mcts_scripts/game24/train_game24_sft.py:31-44": "Train Game24 with MCTS",
    "/train_mcts_scripts/gsm8k/README.md": "Iterative GSM8k Update Process",
    "/train_mcts_scripts/gsm8k/ds_config.json": "Micro-batch ML Training Parameters",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb": "JSONL Deduplication and Merging Script",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:1-47": "Deduplication Pipeline",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:109-130": "Merging JSONL Files and Counting Instances",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:131-166": "Merge and Output Data Files",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:167-191": "Training MCTS: Data Processing",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:192-223": "Data Processing Jupyter Notebook",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:224-233": "Jupyter Kernel Compatibility Settings",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:48-70": "Deduplicating Text Values in Data",
    "/train_mcts_scripts/gsm8k/it1_gsm8k.ipynb:71-108": "Merging MCTS Data and Counting Instances",
    "/train_mcts_scripts/gsm8k/mcts_gsm8k_llama_deepspeed.yaml": "DeepSpeed MCTS Game24 Setup",
    "/train_mcts_scripts/gsm8k/test_policy_and_value.sh": "Multi-GPU ML Training Script",
    "/train_mcts_scripts/gsm8k/train_gsm8k_critic.py": "Training GSM8K Model with MCTS",
    "/train_mcts_scripts/gsm8k/train_gsm8k_critic.py:1-22": "Train MCTS Language Model with FlashAttn",
    "/train_mcts_scripts/gsm8k/train_gsm8k_critic.py:23-48": "Training MCTS Trainer with Configuration",
    "/train_mcts_scripts/gsm8k/train_gsm8k_sft.py": "Training Llama with MCTS and SFT",
    "/train_mcts_scripts/gsm8k/train_gsm8k_sft.py:1-33": "GS-8k SFT Training with Llama",
    "/train_mcts_scripts/gsm8k/train_gsm8k_sft.py:34-50": "Train MCTS Model with JSON Config",
    "/train_mcts_scripts/prontoqa/ds_config.json": "Optimized ML Training Params",
    "/train_mcts_scripts/prontoqa/mcts_prontoqa_llama_deepspeed.yaml": "DeepSpeed MCTS Training Setup",
    "/train_mcts_scripts/prontoqa/test_policy_and_value.sh": "Distributed Testing of Offline RL in Prontoqa Environment",
    "/train_mcts_scripts/prontoqa/train_prontoqa_critic.py": "Train ProntoQA Critic Model",
    "/train_mcts_scripts/prontoqa/train_prontoqa_critic.py:1-23": "Enhanced Llama Training with Flash Attention",
    "/train_mcts_scripts/prontoqa/train_prontoqa_critic.py:24-49": "Train ProntoQA MCTS Critic Model",
    "/train_mcts_scripts/prontoqa/train_prontoqa_sft.py": "Training ProntoQA with MCTS and Flash Attention",
    "/train_mcts_scripts/prontoqa/train_prontoqa_sft.py:1-30": "Train ProntoQA with MCTS Script",
    "/train_mcts_scripts/prontoqa/train_prontoqa_sft.py:31-44": "Initializing RL Training Configuration and Launching MCTS",
    "/train_mcts_scripts/rlhf/README.md": "Train Reinforcement Learning with RLHF",
    "/train_mcts_scripts/rlhf/README.md:1-21": "Iterative RLHF Rollout and Updates",
    "/train_mcts_scripts/rlhf/README.md:24-25": "Train RL Model with Preprocessed Data",
    "/train_mcts_scripts/rlhf/accelerate_config.yaml": "Local, Distributed DeepSpeed Training Config",
    "/train_mcts_scripts/rlhf/ds_config_no_offload.json": "Optimizing ML Training Parameters",
    "/train_mcts_scripts/rlhf/filter_top_data_policy_training.py": "Filter Top MCTS Policy Data",
    "/train_mcts_scripts/rlhf/mix_value_data.py": "Mix Value Data for RLHF",
    "/train_mcts_scripts/rlhf/mix_value_data.py:1-27": "Mixed Value Data Generation",
    "/train_mcts_scripts/rlhf/mix_value_data.py:28-29": "JSON Data Serialization and File Appending",
    "/train_mcts_scripts/rlhf/test_policy_and_value.sh": "Test Policy and Value Functions in RLHF Environment",
    "/train_mcts_scripts/rlhf/train_rlhf_critic.py": "Train RL Trainer with MCTS Configurations",
    "/train_mcts_scripts/rlhf/train_rlhf_critic.py:1-33": "MCTS Trainer Initialization Script",
    "/train_mcts_scripts/rlhf/train_rlhf_critic.py:34-58": "MCTS RL Trainer Initialization",
    "/train_mcts_scripts/rlhf/train_rlhf_policy.py": "Train RL for Language Modeling with MCTS",
    "/train_mcts_scripts/rlhf/train_rlhf_policy.py:1-39": "Train MCTS RL Policy for Language Modeling",
    "/train_mcts_scripts/rlhf/train_rlhf_policy.py:40-64": "Initiate RL Training with Trainer Script",
    "/tsllm/argparse_utils.py": "Utility Functions for Argument Parsing",
    "/tsllm/distributed/utils.py": "Distributed Tensor Computation Utilities",
    "/tsllm/distributed/utils.py:1-37": "Distributed Computation Utilities",
    "/tsllm/distributed/utils.py:38-40": "Gather Distributed Tensor Values",
    "/tsllm/envs/__init__.py": "Environment Module Functions",
    "/tsllm/envs/__init__.py:1-28": "Importing Environment Modules and Data Builders",
    "/tsllm/envs/__init__.py:29-58": "Env Query/Response String Builders",
    "/tsllm/envs/__init__.py:59-77": "Env Answer Checker Function",
    "/tsllm/envs/base_env.py": "LLM-Based Environment for MC Tree Search",
    "/tsllm/envs/base_env.py:1-49": "Transformers-Based MCTS Environment Class",
    "/tsllm/envs/base_env.py:119-148": "Initializing LLM Tree Search Environment",
    "/tsllm/envs/base_env.py:149-176": "Base Environment Update and Termination",
    "/tsllm/envs/base_env.py:177-202": "Game State Manager: base_env Class",
    "/tsllm/envs/base_env.py:203-230": "Text Generation with Language Model and Exception Handling",
    "/tsllm/envs/base_env.py:231-264": "Base Environment Class for Text-Based Games",
    "/tsllm/envs/base_env.py:265-294": "Task Termination and Copy Method in Class-based Environment",
    "/tsllm/envs/base_env.py:295-335": "TokenEnv: Base Env for Token-Level NLP Problems",
    "/tsllm/envs/base_env.py:336-365": "Resetting Task Environment",
    "/tsllm/envs/base_env.py:367-394": "Step Method in Environment Class",
    "/tsllm/envs/base_env.py:395-420": "Action History Initialization and Validation",
    "/tsllm/envs/base_env.py:421-452": "LLM Tree Search: base_env.py Methods and Properties",
    "/tsllm/envs/base_env.py:453-481": "Environment Generation and Status Determination",
    "/tsllm/envs/base_env.py:482-495": "Creating New Environment Object",
    "/tsllm/envs/base_env.py:50-84": "Chain of Thought Environment for NLP Problems",
    "/tsllm/envs/base_env.py:85-118": "Text Completion Base Environment",
    "/tsllm/envs/game24/__init__.py": "Importing Game24 Components",
    "/tsllm/envs/game24/data.py": "Game Dataset Loading and Processing",
    "/tsllm/envs/game24/data.py:1-39": "Game24 Dataset Function",
    "/tsllm/envs/game24/data.py:40-49": "CSVDataset: Reading Puzzle Data from CSV",
    "/tsllm/envs/game24/env.py": "Game24Env: Solving the 24 Math Puzzle",
    "/tsllm/envs/game24/env.py:1-40": "Game24 Answer Extraction Functions",
    "/tsllm/envs/game24/env.py:41-84": "Game 24 Puzzle Environment Class",
    "/tsllm/envs/game24/env.py:85-91": "Game24 Judging and Rewarding Methods",
    "/tsllm/envs/game24/prompt.py": "Master Game 24 with Python Code",
    "/tsllm/envs/game24/prompt.py:1-43": "Understanding Game 24 Prompt Creation",
    "/tsllm/envs/game24/prompt.py:44-92": "Solving Game '24' with Python",
    "/tsllm/envs/game24/prompt.py:93-139": "Code for 24 Game Prompt",
    "/tsllm/envs/gsm8k/__init__.py": "Initializing Environment for GSM8K Dataset",
    "/tsllm/envs/gsm8k/data.py": "GSM8K Dataset Loader",
    "/tsllm/envs/gsm8k/env.py": "GSMLab 8k Environment",
    "/tsllm/envs/gsm8k/env.py:1-37": "Answer Extraction Functions",
    "/tsllm/envs/gsm8k/env.py:38-79": "Gsm8kEnv: Correctness Checking Class",
    "/tsllm/envs/gsm8k/env.py:80-90": "Env Initialization and Reward Methods",
    "/tsllm/envs/gsm8k/prompt.py": "Interactive Math Tutor with Python",
    "/tsllm/envs/gsm8k/prompt.py:1-1": "Math Puzzles: Step-by-Step Solutions",
    "/tsllm/envs/gsm8k/prompt.py:1-6": "Python Prompt Formatting Code",
    "/tsllm/envs/prontoqa/__init__.py": "PrOntoQA Environment Setup",
    "/tsllm/envs/prontoqa/data.py": "Dataset Creation Script",
    "/tsllm/envs/prontoqa/data.py:1-40": "Train-Test Dataset Functions",
    "/tsllm/envs/prontoqa/data.py:41-75": "CSV Puzzle Class and Data Preprocessing",
    "/tsllm/envs/prontoqa/data.py:76-96": "JSONL Classifier Data Generation",
    "/tsllm/envs/prontoqa/env.py": "ProntoQA Environment: Answer Extractor and Checker",
    "/tsllm/envs/prontoqa/env.py:1-38": "Extracting Answers and Ground Truth from Strings",
    "/tsllm/envs/prontoqa/env.py:40-79": "PrOntoQAEnv: Math Problem Class Initialization",
    "/tsllm/envs/prontoqa/env.py:80-96": "ProntoQA Environment Class",
    "/tsllm/envs/prontoqa/prompt.py": "Arthropod Logic: True or False?",
    "/tsllm/envs/prontoqa/prompt.py:1-15": "Logical Reasoning Task: Animal Classification & Relationships",
    "/tsllm/envs/prontoqa/prompt.py:16-41": "Rex's Bony Statement",
    "/tsllm/envs/prontoqa/prompt.py:41-61": "Logical Reasoning for True/False Statements",
    "/tsllm/envs/prontoqa/prompt.py:62-71": "Formatting Task Examples",
    "/tsllm/envs/prontoqa/prompt.py:72-77": "Concept Quiz: Math & Science Facts",
    "/tsllm/envs/prontoqa/prompt.py:77-79": "Function for Truth Determination",
    "/tsllm/envs/rlhf/__init__.py": "RLHF Environment Imports",
    "/tsllm/envs/rlhf/data.py": "RLHF Data Generation",
    "/tsllm/envs/rlhf/data.py:1-30": "Train-Test Dataset Builder",
    "/tsllm/envs/rlhf/data.py:111-132": "Remove Duplicates and Build Query Strings",
    "/tsllm/envs/rlhf/data.py:133-146": "Generate Query Lists for Problem Inputs",
    "/tsllm/envs/rlhf/data.py:31-58": "Data Preparation and Processing",
    "/tsllm/envs/rlhf/data.py:59-83": "Create Datasets and Value Index Function",
    "/tsllm/envs/rlhf/data.py:84-110": "Indexing and Encoding Tokens",
    "/tsllm/envs/rlhf/env.py": "Reinforcement Learning Environment for Language Models",
    "/tsllm/envs/rlhf/env.py:1-43": "RLHF Token Env Class",
    "/tsllm/envs/rlhf/env.py:44-72": "Reinforcement Learning Class for End of Sequence",
    "/tsllm/envs/rlhf/env.py:73-102": "Reinforcement Learning Environment for Language Models",
    "/tsllm/envs/rlhf/prompt.py": "Prompt Template Constants",
    "/tsllm/envs/tests/test_game24.py": "Testing Game24Env with JSONL Data",
    "/tsllm/envs/tests/test_game24.py:1-38": "Game24Env Testing and Contextual Understanding",
    "/tsllm/envs/tests/test_game24.py:39-68": "Game24 Dataset Preparation",
    "/tsllm/envs/tests/test_game24.py:69-76": "JSONL Data Loading and Encoding Test",
    "/tsllm/envs/tests/test_gsm8k.py": "GSMLLM Dataset Testing: GSM8k Few-Shot",
    "/tsllm/envs/tests/test_gsm8k.py:1-39": "Math Problem Game Environment Test",
    "/tsllm/envs/tests/test_gsm8k.py:40-68": "GSMT Dataset Initialization and Few-Shot Learning",
    "/tsllm/envs/tests/test_gsm8k.py:69-79": "Testing GSM8k Dataset with GSMLLMTreeSearch Model",
    "/tsllm/envs/tests/test_prontoqa.py": "Llama-2-7b-hf for PrOntoQA Dataset Setup",
    "/tsllm/envs/tests/test_prontoqa.py:1-19": "QA Environment Testing",
    "/tsllm/envs/tests/test_prontoqa.py:20-52": "PrOntoQA Environment Testing and Demonstration",
    "/tsllm/envs/tests/test_prontoqa.py:53-79": "Training Dataset Lengths and Print Statements",
    "/tsllm/envs/tests/test_rlhf.py": "RLHF Environment Setup Testing",
    "/tsllm/envs/tests/test_rlhf.py:1-29": "RLHF Environment Testing",
    "/tsllm/envs/tests/test_rlhf.py:30-56": "Pretraining LM with Supervised Fine-Tuning",
    "/tsllm/envs/tests/test_rlhf.py:57-66": "RLHF Critic Data Generation",
    "/tsllm/envs/utils.py": "Building Critic Data Component",
    "/tsllm/envs/utils.py:1-33": "JSONL Task Data Builder",
    "/tsllm/envs/utils.py:122-135": "Reward List Initialization",
    "/tsllm/envs/utils.py:34-66": "Build Critic Data Components Function",
    "/tsllm/envs/utils.py:67-94": "Tokenizing and Indexing Question-Answer Pairs",
    "/tsllm/envs/utils.py:96-121": "Filtering and Building Queries from JSONL Data",
    "/tsllm/inference/evaluation/vote_utils.py": "Vote Aggregation Functions",
    "/tsllm/inference/lm_self_value.py": "Self-Value Mean Calculator",
    "/tsllm/inference/lm_self_value.py:1-32": "Generating Prompts with Tot_Value_Fn",
    "/tsllm/inference/lm_self_value.py:33-62": "Keywords-Based Sequence Scoring",
    "/tsllm/inference/lm_self_value.py:63-65": "Mean Appender",
    "/tsllm/inference/trajectory_collector.py": "MCTS Rollout with Trajectory Collector",
    "/tsllm/inference/trajectory_collector.py:1-36": "MCTS Rollout Function",
    "/tsllm/inference/trajectory_collector.py:38-64": "Trajectory Collector During Inference",
    "/tsllm/inference/trajectory_collector.py:65-94": "MCTS Rollout Function Definition",
    "/tsllm/inference/value.py": "Value Function Inference in Text Critic Model",
    "/tsllm/inference/value.py:1-33": "Value Function Implementation",
    "/tsllm/inference/value.py:34-55": "Value Calculation from Critic Model",
    "/tsllm/llm/ct2_utils.py": "Ctrans2 Model Loading Function",
    "/tsllm/llm/ct2_utils.py:1-27": "Load and Convert ctranslate2 Model",
    "/tsllm/llm/ct2_utils.py:28-54": "Python Class for LLM Initialization",
    "/tsllm/llm/ct2_utils.py:55-63": "Load Model or Initialize New",
    "/tsllm/llm/text_generation.py": "Efficient Text Generation with ChatGLM",
    "/tsllm/llm/text_generation.py:1-30": "Text Generation Function: Prompt-Based Text Generation with Stop Token",
    "/tsllm/llm/text_generation.py:124-143": "Handling Substring Absence in Text Generation",
    "/tsllm/llm/text_generation.py:31-63": "LLM Text Generation with Static and Dynamic Prompts",
    "/tsllm/llm/text_generation.py:64-92": "Text Generation with LLM and Probability Logging",
    "/tsllm/llm/text_generation.py:93-123": "Text Generation with ChatGLM Model",
    "/tsllm/mcts/tree.py": "Monte Carlo Tree Search for Games and Language",
    "/tsllm/mcts/tree.py:1-47": "Tree Search Node Base Class",
    "/tsllm/mcts/tree.py:121-156": "LanguageNode Class Overview",
    "/tsllm/mcts/tree.py:157-190": "Tree Node Class in MCTS Algorithm",
    "/tsllm/mcts/tree.py:191-224": "Monte Carlo Tree Search Algorithm Implementation",
    "/tsllm/mcts/tree.py:225-256": "Monte Carlo Tree Search Algorithm Class",
    "/tsllm/mcts/tree.py:257-279": "MCTS Tree Initialization and Simulation",
    "/tsllm/mcts/tree.py:280-305": "Action Visit Calculation",
    "/tsllm/mcts/tree.py:306-336": "Monte Carlo Tree Search Tree Initialization",
    "/tsllm/mcts/tree.py:337-373": "Tree Expansion and Rollout in MCTS",
    "/tsllm/mcts/tree.py:374-395": "MCTS Mode: Max Paths or Tokens Exit",
    "/tsllm/mcts/tree.py:396-426": "Initialize, Simulate and Generate Language Model Paths",
    "/tsllm/mcts/tree.py:427-451": "Select and Update Tree",
    "/tsllm/mcts/tree.py:452-482": "Beam Search Tree Algorithm: Initializing and Expanding",
    "/tsllm/mcts/tree.py:484-505": "Beam Search Tree Traversal Algorithm",
    "/tsllm/mcts/tree.py:49-81": "Monte Carlo Tree Search Node Class",
    "/tsllm/mcts/tree.py:506-526": "MCTS: Selecting and Expanding Children Nodes",
    "/tsllm/mcts/tree.py:527-556": "Monte Carlo Tree Search Algorithm: Path Evaluation and Storage",
    "/tsllm/mcts/tree.py:557-585": "Depth-First MCTS Trajectory Collection",
    "/tsllm/mcts/tree.py:586-610": "Sorting and Expanding Tree Nodes",
    "/tsllm/mcts/tree.py:611-641": "Depth-First Search with Pruning and Trajectory Listing",
    "/tsllm/mcts/tree.py:642-660": "Monte Carlo Tree Search Algorithm for Game AI",
    "/tsllm/mcts/tree.py:661-680": "MCTS Algorithm Leaf Node Expansion",
    "/tsllm/mcts/tree.py:681-703": "Leaf Value Assignment in Tree-based MCTS Algorithm",
    "/tsllm/mcts/tree.py:704-729": "Leaf Node Value Calculation",
    "/tsllm/mcts/tree.py:730-748": "MCTS Tree Node Value Updates",
    "/tsllm/mcts/tree.py:749-775": "Select Child Node with Highest UCB Score",
    "/tsllm/mcts/tree.py:776-800": "UCB-PRM Action Selection",
    "/tsllm/mcts/tree.py:801-824": "Expand Leaf Node without Policy",
    "/tsllm/mcts/tree.py:82-120": "Game Tree Node Class and MCTS Functions",
    "/tsllm/mcts/tree.py:825-851": "Expanding Leaf Node with Policy Forward Function",
    "/tsllm/mcts/tree.py:852-879": "Leaf Value Calculation in Decision Tree",
    "/tsllm/mcts/tree.py:880-905": "Create Child Node in Language Tree",
    "/tsllm/mcts/tree.py:906-936": "UCB Scores for Monte Carlo Tree Search",
    "/tsllm/mcts/tree.py:937-963": "Resetting Prior Probabilities with Exploration Noise",
    "/tsllm/mcts/tree.py:965-987": "Build JSON Tree with from_json Function",
    "/tsllm/mcts/tree.py:988-1010": "Monte Carlo Tree Search Algorithm Builder",
    "/tsllm/mcts/utils.py": "Retrieve Tree Root",
    "/tsllm/merge_jsonl.py": "Merge JSONL Files Efficiently",
    "/tsllm/model/__init__.py": "Critic Model Initialization",
    "/tsllm/model/__init__.py:1-25": "Loading Critic Model with ValueHeadLLM",
    "/tsllm/model/__init__.py:26-49": "Critic Model Initialization",
    "/tsllm/model/llama_flash_attn_monkey_patch.py": "Llama Flash Attention Patch",
    "/tsllm/model/llama_flash_attn_monkey_patch.py:1-37": "Attention Operation in LLaMA",
    "/tsllm/model/llama_flash_attn_monkey_patch.py:120-124": "Custom Attention Mask for Llama Model",
    "/tsllm/model/llama_flash_attn_monkey_patch.py:38-68": "Flash Attention Monkey Patch",
    "/tsllm/model/llama_flash_attn_monkey_patch.py:69-92": "Handling Attention Masks in Llama Model",
    "/tsllm/model/llama_flash_attn_monkey_patch.py:93-119": "Flash Attention Llama Model Monkey Patch",
    "/tsllm/model/modeling_actor_critic.py": "Actor-Critic Transformer Model for Causal LMs",
    "/tsllm/model/modeling_actor_critic.py:1-29": "Actor-Critic Modeling Module",
    "/tsllm/model/modeling_actor_critic.py:110-135": "Value-Aware Text Generation Model",
    "/tsllm/model/modeling_actor_critic.py:136-152": "Gradient Checkpointing and State Loading in Actor-Critic Model",
    "/tsllm/model/modeling_actor_critic.py:30-59": "CausalLMOutputWithValue Class and Model Wrapper",
    "/tsllm/model/modeling_actor_critic.py:60-83": "Forward Method in Actor-Critic Model",
    "/tsllm/model/modeling_actor_critic.py:84-109": "Actor-Critic Transformer Model",
    "/tsllm/model/modeling_base.py": "Efficient Model Integration with PreTrainedModelWrapper",
    "/tsllm/model/modeling_base.py:1-32": "Extending PreTrainedModel with Peft Integration",
    "/tsllm/model/modeling_base.py:108-136": "Instantiating Pretrained PyTorch Models",
    "/tsllm/model/modeling_base.py:137-152": "Load Pretrained Model Function",
    "/tsllm/model/modeling_base.py:153-182": "Pretrained Model 8-Bit Check",
    "/tsllm/model/modeling_base.py:183-203": "Peft Adapter Initialization",
    "/tsllm/model/modeling_base.py:205-226": "Checking and Loading Pretrained Adapter Configuration",
    "/tsllm/model/modeling_base.py:227-250": "Initializing Model with Pretrained Path",
    "/tsllm/model/modeling_base.py:251-275": "Efficient PyTorch Model Downloading",
    "/tsllm/model/modeling_base.py:276-295": "Sharded Model State Dict Loader",
    "/tsllm/model/modeling_base.py:297-321": "Loading and Saving Model Pre-Trained States",
    "/tsllm/model/modeling_base.py:322-343": "Saving Lora Model States",
    "/tsllm/model/modeling_base.py:33-51": "Specifying Model Type and Supported Modules",
    "/tsllm/model/modeling_base.py:344-355": "Validation and Filtering of Unsupported Arguments",
    "/tsllm/model/modeling_base.py:52-77": "PEFT Model Base Class",
    "/tsllm/model/modeling_base.py:78-107": "Instantiating Pretrained PyTorch Models from Config",
    "/tsllm/model/modeling_prm.py": "Efficient Causal Language Model Outputs",
    "/tsllm/model/modeling_prm.py:1-24": "Categorical Causal Language Model Outputs",
    "/tsllm/model/modeling_prm.py:100-128": "Load and Initialize Categorical Model State",
    "/tsllm/model/modeling_prm.py:129-156": "Creating Language Model Output Class",
    "/tsllm/model/modeling_prm.py:157-166": "Modeling PRM Returns",
    "/tsllm/model/modeling_prm.py:168-191": "ValueHeadedLLM: AutoModel Wrapper with Cat Head",
    "/tsllm/model/modeling_prm.py:193-223": "Value and Loss Model: Forward, Gradient, State",
    "/tsllm/model/modeling_prm.py:224-250": "Model State Dictionary Functions",
    "/tsllm/model/modeling_prm.py:25-35": "Modeling PRM: Output Features",
    "/tsllm/model/modeling_prm.py:252-270": "Loading Model Configurations",
    "/tsllm/model/modeling_prm.py:36-73": "Categorical Language Model with Linear Layer",
    "/tsllm/model/modeling_prm.py:74-99": "Gradient Checkpointing Language Model",
    "/tsllm/model/utils.py": "Chainable Attribute Access Functions",
    "/tsllm/model/utils.py:1-34": "Chainable Attribute Access Utilities",
    "/tsllm/model/utils.py:35-38": "Verify Object Attributes Existence",
    "/tsllm/offline_rl/dedup.py": "JSONL Deduplication and Counting",
    "/tsllm/offline_rl/game24/gen_3.sh": "Game24 Data Generation Script",
    "/tsllm/offline_rl/game24/process.sh": "Game24 Data Preprocessing",
    "/tsllm/offline_rl/game24/process.sh:1-30": "Game24 Data Preprocessing Script",
    "/tsllm/offline_rl/game24/process.sh:31-42": "Merge and Split Training Data Set",
    "/tsllm/offline_rl/generate_data.py": "Efficient Llama Model Data Generation",
    "/tsllm/offline_rl/generate_data.py:1-34": "Generate Data Function for Offline RL",
    "/tsllm/offline_rl/generate_data.py:108-135": "LLAMa Data Generation with ThreadPoolExecutor",
    "/tsllm/offline_rl/generate_data.py:136-160": "Command Line Setup for Offline RL Data Generation",
    "/tsllm/offline_rl/generate_data.py:35-70": "Convert LLama to CT2 and Generate Data",
    "/tsllm/offline_rl/generate_data.py:72-107": "Generative Data for Offline RL",
    "/tsllm/offline_rl/gsm8k_data/gen_3.sh": "GSM8k Data Generation Script",
    "/tsllm/offline_rl/gsm8k_data/process.sh": "GSM8K Data Processing Script",
    "/tsllm/offline_rl/gsm8k_data/process.sh:1-32": "GSM8K Data Processing and Sampling",
    "/tsllm/offline_rl/gsm8k_data/process.sh:33-42": "Script Execution and Data Merging",
    "/tsllm/offline_rl/merge.py": "Merge and Deduplicate JSONL Pairs",
    "/tsllm/offline_rl/merge.py:1-33": "JSONL Merge and Deduplicate",
    "/tsllm/offline_rl/merge.py:34-49": "Duplicate Filter and Counting",
    "/tsllm/offline_rl/prontoqa/gen_3.sh": "Offline RL with ProntoQA Data Generation",
    "/tsllm/offline_rl/prontoqa/process.sh": "Directory Setup and Splitting Data for Offline RL",
    "/tsllm/offline_rl/rlhf/gen_3.sh": "RLHF Test Script Configuration",
    "/tsllm/offline_rl/rlhf/process.py": "JSONL Data Merger Tool",
    "/tsllm/offline_rl/rlhf/process.py:1-32": "JSONL Merge and Format Tool",
    "/tsllm/offline_rl/rlhf/process.py:33-36": "JSON File Writer",
    "/tsllm/offline_rl/rlhf/process.sh": "Script to Process Data and Save Output",
    "/tsllm/offline_rl/sample.py": "Random JSONL Sampling for Offline RL",
    "/tsllm/offline_rl/split_two_test.py": "JSONL Data Splitting and Sampling",
    "/tsllm/offline_rl/split_two_test.py:1-34": "JSONL Data Split and Sampling",
    "/tsllm/offline_rl/split_two_test.py:36-42": "Deduplicate and JSONLize Data",
    "/tsllm/offline_rl/test_sft_and_v.py": "Distributed RL Offline Testing",
    "/tsllm/offline_rl/test_sft_and_v.py:1-35": "Offline RL Test Suite",
    "/tsllm/offline_rl/test_sft_and_v.py:117-153": "Tree Search Hyperparameter Configuration for Offline RL Testing",
    "/tsllm/offline_rl/test_sft_and_v.py:154-176": "Set Environment and Parse Args for Tree Search",
    "/tsllm/offline_rl/test_sft_and_v.py:177-206": "Setting Up LLM Task Environment"
}