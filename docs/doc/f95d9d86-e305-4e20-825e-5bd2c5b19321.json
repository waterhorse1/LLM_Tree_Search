{
    "summary": "The code describes an iterative update process for GSM8k using rollout and training. Rollout hyperparameters are provided, and the process involves sampling examples on a training dataset using `test_sft_and_v.py`. After rollout, data is merged and then used for SFT and critic training following instructions in `it1_gsm8k.ipynb`. Training scripts can be found in `train_mcts_scripts/gsm8k/`, where arguments are modified within the `config` file before starting the training process.",
    "details": [
        {
            "comment": "The code describes an iterative update process for GSM8k using rollout and training. Rollout hyperparameters are provided, and the process involves sampling examples on a training dataset using `test_sft_and_v.py`. After rollout, data is merged and then used for SFT and critic training following instructions in `it1_gsm8k.ipynb`. Training scripts can be found in `train_mcts_scripts/gsm8k/`, where arguments are modified within the `config` file before starting the training process.",
            "location": "\"/media/root/Toshiba XG3/works/LLM_Tree_Search/docs/src/train_mcts_scripts/gsm8k/README.md\":0-32",
            "content": "## iterative update of GSM8k\nHere we describe how to rollout and training iteratively, taking GSM8k for example,\n### Rollout\nuse `test_sft_and_v.py` to sample examples on training dataset. Rollout hyperparameters for GSM8k:\n```python\n{\n    \"temperature\": 1.0, \n    \"max_length\": 8, \n    \"max_action\": 10, \n    \"pb_c_init\": 3, \n    \"num_simulations\": 5, \n    \"num_mcts_aggregation\": 12, \n    \"rollout_method\": \"mcts.get_next_action\", \n    \"mcts_sample\": True,\n    \"clear_tree\": True,\n    \"reset_total_tree\": False,\n    # # useless hyperparameters in SearchArgs\n    # \"prune_ratio\": 0.7,\n    # \"prune_value\": None,\n    # \"select_by_prior\": False,\n    # \"max_simulation\": None,\n    # \"max_token\": 51200,\n    # \"k_maj\": 100,\n}\n```\nRun `test_sft_and_v.py` with `--test False`, which means testing on training dataset.\nAfter rollout, first merge all data, using `tsllm/merge_jsonl.py`.\nThen check `it1_gsm8k.ipynb` to merge data for SFT and critic training.\n### Training\ncheck `train_mcts_scripts/gsm8k/` for `train_gsm8k_{sft/critic}.py`, modify args in `config`, then train it."
        }
    ]
}